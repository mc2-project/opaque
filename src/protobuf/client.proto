syntax = "proto3";

package opaque.protos;

// The Client <-> Enclave service
service ClientToEnclave {
  // Client sends AttestationStatus to the Enclave, receives Evidence
  rpc GetRemoteEvidence(AttestationStatus) returns (Evidence) {}

  // After processing Evidence, Client sends encrypted shared key
  // as Encrypted Data and receives AttestationStatus
  rpc GetFinalAttestationResult(EncryptedData) returns (AttestationStatus) {}
}

message Evidence {
  // `oe_evidence_msg_t`
  // evidence includes attestation evidence, enclave public key, and nonce
  bytes evidence_msg = 1;
}

message AttestationStatus {
  // This is 0 if not attested or attestation failed,
  // 1 if whichever node is sending it has completed
  // attestation successfully
  int32 status = 1;
}

message EncryptedData {
  // Arbitrary bytes that can be any encrypted serialized object
  bytes encrypted_data = 1;
}